
#+TITLE: Advent Of Code 2020, Perl Golfing

* Day 1

** Problem 1

** Problem 2

* Day 2

** Problem 2

#+BEGIN_SRC bash
perl -nlpe 's/^([0-9]+)-([0-9]+) ([a-z]): *(.*)/print("$4" =~ \/^[^$3]*(?:${3}[^$3]*){$1,$2}[^$3]*\$\/,"\n");/' full.input | perl | grep 1 | wc -l
#+END_SRC

** Problem 1

* Day 3

** Problem 1

#+BEGIN_SRC bash
perl -anle '$a++if$F[$x]eq"#";($x+=3)%=$#F+1;END{print$a}' -F'' full.input
#+END_SRC

** Problem 2

#+BEGIN_SRC bash
perl -F'' -alne 'BEGIN{@a=((map{[1,$_]}(1,3,5,7)),[2,1])};@a=map{@b=@{$_};($l%$b[0])<1?[$b[0],$b[1],($b[2]+$b[1])%($#F+1),($F[$b[2]]eq"#"?$b[3]+1:$b[3])]:$_}@a;$l++;END{print(eval(join("*",map{$_->[3]}@a)))}' full.input
#+END_SRC

* Day 4

** Problem 1

#+BEGIN_SRC bash
perl -00 -F'[\s:]' -ape '%f=@F;$a++if 1>grep{not$f{$_}}("byr","iyr","eyr","hgt","hcl","ecl","pid");$_="";END{print$a}' full.input
#+END_SRC

